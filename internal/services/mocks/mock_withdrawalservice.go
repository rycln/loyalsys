// Code generated by MockGen. DO NOT EDIT.
// Source: withdrawalservice.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/rycln/loyalsys/internal/models"
)

// MockwithdrawalStorager is a mock of withdrawalStorager interface.
type MockwithdrawalStorager struct {
	ctrl     *gomock.Controller
	recorder *MockwithdrawalStoragerMockRecorder
}

// MockwithdrawalStoragerMockRecorder is the mock recorder for MockwithdrawalStorager.
type MockwithdrawalStoragerMockRecorder struct {
	mock *MockwithdrawalStorager
}

// NewMockwithdrawalStorager creates a new mock instance.
func NewMockwithdrawalStorager(ctrl *gomock.Controller) *MockwithdrawalStorager {
	mock := &MockwithdrawalStorager{ctrl: ctrl}
	mock.recorder = &MockwithdrawalStoragerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockwithdrawalStorager) EXPECT() *MockwithdrawalStoragerMockRecorder {
	return m.recorder
}

// GetWithdrawalsByUserID mocks base method.
func (m *MockwithdrawalStorager) GetWithdrawalsByUserID(arg0 context.Context, arg1 models.UserID) ([]*models.WithdrawalDB, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWithdrawalsByUserID", arg0, arg1)
	ret0, _ := ret[0].([]*models.WithdrawalDB)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWithdrawalsByUserID indicates an expected call of GetWithdrawalsByUserID.
func (mr *MockwithdrawalStoragerMockRecorder) GetWithdrawalsByUserID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWithdrawalsByUserID", reflect.TypeOf((*MockwithdrawalStorager)(nil).GetWithdrawalsByUserID), arg0, arg1)
}
