// Code generated by MockGen. DO NOT EDIT.
// Source: userservice.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/rycln/loyalsys/internal/models"
)

// MockuserStorager is a mock of userStorager interface.
type MockuserStorager struct {
	ctrl     *gomock.Controller
	recorder *MockuserStoragerMockRecorder
}

// MockuserStoragerMockRecorder is the mock recorder for MockuserStorager.
type MockuserStoragerMockRecorder struct {
	mock *MockuserStorager
}

// NewMockuserStorager creates a new mock instance.
func NewMockuserStorager(ctrl *gomock.Controller) *MockuserStorager {
	mock := &MockuserStorager{ctrl: ctrl}
	mock.recorder = &MockuserStoragerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockuserStorager) EXPECT() *MockuserStoragerMockRecorder {
	return m.recorder
}

// AddUser mocks base method.
func (m *MockuserStorager) AddUser(arg0 context.Context, arg1 *models.UserDB) (models.UserID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddUser", arg0, arg1)
	ret0, _ := ret[0].(models.UserID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddUser indicates an expected call of AddUser.
func (mr *MockuserStoragerMockRecorder) AddUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddUser", reflect.TypeOf((*MockuserStorager)(nil).AddUser), arg0, arg1)
}

// GetUserByLogin mocks base method.
func (m *MockuserStorager) GetUserByLogin(arg0 context.Context, arg1 string) (*models.UserDB, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserByLogin", arg0, arg1)
	ret0, _ := ret[0].(*models.UserDB)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserByLogin indicates an expected call of GetUserByLogin.
func (mr *MockuserStoragerMockRecorder) GetUserByLogin(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserByLogin", reflect.TypeOf((*MockuserStorager)(nil).GetUserByLogin), arg0, arg1)
}
