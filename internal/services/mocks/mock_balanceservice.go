// Code generated by MockGen. DO NOT EDIT.
// Source: balanceservice.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/rycln/loyalsys/internal/models"
)

// MockbalanceStorager is a mock of balanceStorager interface.
type MockbalanceStorager struct {
	ctrl     *gomock.Controller
	recorder *MockbalanceStoragerMockRecorder
}

// MockbalanceStoragerMockRecorder is the mock recorder for MockbalanceStorager.
type MockbalanceStoragerMockRecorder struct {
	mock *MockbalanceStorager
}

// NewMockbalanceStorager creates a new mock instance.
func NewMockbalanceStorager(ctrl *gomock.Controller) *MockbalanceStorager {
	mock := &MockbalanceStorager{ctrl: ctrl}
	mock.recorder = &MockbalanceStoragerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockbalanceStorager) EXPECT() *MockbalanceStoragerMockRecorder {
	return m.recorder
}

// GetBalanceByUserID mocks base method.
func (m *MockbalanceStorager) GetBalanceByUserID(arg0 context.Context, arg1 models.UserID) (*models.Balance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalanceByUserID", arg0, arg1)
	ret0, _ := ret[0].(*models.Balance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBalanceByUserID indicates an expected call of GetBalanceByUserID.
func (mr *MockbalanceStoragerMockRecorder) GetBalanceByUserID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalanceByUserID", reflect.TypeOf((*MockbalanceStorager)(nil).GetBalanceByUserID), arg0, arg1)
}
