// Code generated by MockGen. DO NOT EDIT.
// Source: getbalance.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/rycln/loyalsys/internal/models"
)

// MockgetBalanceServicer is a mock of getBalanceServicer interface.
type MockgetBalanceServicer struct {
	ctrl     *gomock.Controller
	recorder *MockgetBalanceServicerMockRecorder
}

// MockgetBalanceServicerMockRecorder is the mock recorder for MockgetBalanceServicer.
type MockgetBalanceServicerMockRecorder struct {
	mock *MockgetBalanceServicer
}

// NewMockgetBalanceServicer creates a new mock instance.
func NewMockgetBalanceServicer(ctrl *gomock.Controller) *MockgetBalanceServicer {
	mock := &MockgetBalanceServicer{ctrl: ctrl}
	mock.recorder = &MockgetBalanceServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockgetBalanceServicer) EXPECT() *MockgetBalanceServicerMockRecorder {
	return m.recorder
}

// GetUserBalance mocks base method.
func (m *MockgetBalanceServicer) GetUserBalance(arg0 context.Context, arg1 models.UserID) (*models.Balance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserBalance", arg0, arg1)
	ret0, _ := ret[0].(*models.Balance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserBalance indicates an expected call of GetUserBalance.
func (mr *MockgetBalanceServicerMockRecorder) GetUserBalance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserBalance", reflect.TypeOf((*MockgetBalanceServicer)(nil).GetUserBalance), arg0, arg1)
}

// MockgetBalanceJWT is a mock of getBalanceJWT interface.
type MockgetBalanceJWT struct {
	ctrl     *gomock.Controller
	recorder *MockgetBalanceJWTMockRecorder
}

// MockgetBalanceJWTMockRecorder is the mock recorder for MockgetBalanceJWT.
type MockgetBalanceJWTMockRecorder struct {
	mock *MockgetBalanceJWT
}

// NewMockgetBalanceJWT creates a new mock instance.
func NewMockgetBalanceJWT(ctrl *gomock.Controller) *MockgetBalanceJWT {
	mock := &MockgetBalanceJWT{ctrl: ctrl}
	mock.recorder = &MockgetBalanceJWTMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockgetBalanceJWT) EXPECT() *MockgetBalanceJWTMockRecorder {
	return m.recorder
}

// ParseIDFromAuthHeader mocks base method.
func (m *MockgetBalanceJWT) ParseIDFromAuthHeader(arg0 string) (models.UserID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseIDFromAuthHeader", arg0)
	ret0, _ := ret[0].(models.UserID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseIDFromAuthHeader indicates an expected call of ParseIDFromAuthHeader.
func (mr *MockgetBalanceJWTMockRecorder) ParseIDFromAuthHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseIDFromAuthHeader", reflect.TypeOf((*MockgetBalanceJWT)(nil).ParseIDFromAuthHeader), arg0)
}
